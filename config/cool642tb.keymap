#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

//#define MOUSE 4

#define SCROLL 5

//#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        comb5 {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <9 8>;
            timeout-ms = <0>;
        };

        JP {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <13 12>;
        };

        EN {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <18 19>;
        };

        BT {
            bindings = <&mo 6>;
            key-positions = <30 31>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        PW_1: PW_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Y) &kp U &kp S &kp H &kp I &kp N1 &kp N9 &kp N9 &kp N1 &kp N0 &kp N3 &kp N0 &kp N6>;
            label = "PW_1";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp L         &kp U    &kp COMMA                    &kp PERIOD                                     &kp F        &kp W  &kp R    &kp Y            &kp P
&mt LCTRL E       &kp I         &lt 5 A  &lt 4 O                      &kp MINUS      &none                &to 4      &kp K        &kp T  &lt 5 N  &kp S            &lt 4 H
&mt LEFT_SHIFT Z  &kp X         &kp C    &kp V                        &kp SEMICOLON  &none                &none      &kp G        &kp D  &kp M    &mt RIGHT_ALT J  &kp B
&kp LEFT_ALT      &kp LEFT_WIN  &kp TAB  &mt LEFT_SHIFT INT_MUHENKAN  &lt 3 ENTER    &mt LCTRL BACKSPACE  &lt 2 DEL  &lt 1 SPACE                                   &mt RIGHT_SHIFT INT_HENKAN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM,SYM1 {
            bindings = <
&kp N1            &kp N2            &kp N3           &kp N4                     &kp N5                               &kp N6         &kp N7                &kp N8                    &kp N9             &kp N0
&kp CARET         &kp AT_SIGN       &kp SLASH        &kp MINUS                  &kp UNDERSCORE       &none   &none   &kp SEMICOLON  &kp COLON             &kp LEFT_BRACKET          &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH
&kp LC(NUMBER_2)  &kp LC(NUMBER_6)  &kp PRINTSCREEN  &kp LS(LG(S))              &kp LA(PRINTSCREEN)  &none   &none   &kp CAPSLOCK   &kp LS(LC(NUMBER_2))  &kp LS(LC(LEFT_BRACKET))  &none              &kp SCROLLLOCK
&trans            &trans            &trans           &mt LEFT_SHIFT LANGUAGE_1  &trans               &trans  &trans  &trans                                                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        SYM2 {
            bindings = <
&kp EXCLAMATION    &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR                 &kp PERCENT                     &kp AMPERSAND           &kp SQT                  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp NON_US_BACKSLASH
&kp TILDE          &kp GRAVE          &kp QUESTION  &kp EQUAL                  &kp UNDERSCORE  &trans  &trans  &kp PLUS                &kp ASTERISK             &kp LEFT_BRACE        &kp RIGHT_BRACE             &kp PIPE
&kp LS(LA(MINUS))  &trans             &trans        &trans                     &PW_1           &trans  &trans  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &kp LC(LG(LA(D)))     &kp LA(LC(LG(LEFT_ARROW)))  &kp LA(LC(LG(RIGHT_ARROW)))
&trans             &trans             &trans        &mt LEFT_SHIFT LANGUAGE_2  &trans          &trans  &trans  &trans                                                                                             &kp LC(LG(F4))
            >;
        };

        NUM-SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &kp LANGUAGE_2  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_0    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp DOT                                                   &kp PLUS
            >;
        };

        MOUSE {
            bindings = <
&kp ESCAPE  &kp N7        &kp N8        &kp N9        &trans                     &trans    &trans    &trans    &trans    &trans
&kp CARET   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans  &to 0   &mkp MB5  &mkp MB1  &mo 3     &mkp MB2  &mkp MB4
&kp N0      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &trans  &trans  &mkp MB4  &trans    &mkp MB3  &trans    &mkp MB5
&kp DOT     &kp COMMA     &kp AT        &trans        &trans     &trans  &trans  &trans                                  &trans
            >;
        };

        FUN-ARROW {
            bindings = <
&kp ESC  &kp F1  &kp F2   &kp F3   &kp F4                   &kp INSERT   &kp HOME        &kp UP_ARROW  &kp END    &kp PAGE_UP
&trans   &kp F5  &kp F6   &kp F7   &kp F8   &trans  &trans  &kp LC(TAB)  &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT  &kp PAGE_DOWN
&trans   &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans  &kp LC(C)    &kp LEFT        &kp DOWN      &kp RIGHT  &kp LC(V)
&trans   &trans  &trans   &trans   &trans   &trans  &trans  &trans                                                &trans
            >;
        };

        BT {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans                          &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
